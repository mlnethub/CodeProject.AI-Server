{
  "Modules": {
    "ObjectDetectionYoloRKNN": {
      "Name": "Object Detection (YOLOv5 RKNN)",
      "Version": "1.1",

      // Publishing info
      "Description": "Provides Object Detection using YOLOv5 RKNN models. This module only works with Rockchip RK3588/RK3588S NPUs like the Orange Pi 5/5B/5 Plus",
      "Platforms": [ "linux-arm64" ], // OrangePi, specifically
      "License": "Apache-2.0",
      "LicenseUrl": "https://opensource.org/licenses/Apache-2.0",

      // Which server version is compatible with each version of this module.
      "ModuleReleases": [
        { "ModuleVersion": "1.0", "ServerVersionRange": ["2.1", ""], "ReleaseDate": "2023-08-06" },
        { "ModuleVersion": "1.1", "ServerVersionRange": ["2.1", ""], "ReleaseDate": "2023-08-06", "ReleaseNotes": "Corrected installer in docker environment" }
      ],

      // Launch instructions
      "AutoStart": true,
      "FilePath": "objectdetection_fd_rknn_adapter.py",
      "Runtime": "python39",
      "RuntimeLocation": "Local", // Can be Local or Shared

      // These are all optional. Defaults are usually fine
      "SupportGPU": true,
      "AcceleratorDeviceName": null,  // = default
      "Parallelism": 1,               // 0 = Default (number of CPUs - 1)
      "HalfPrecision": "enable",      // "Force", "Enable", "Disable": whether to force on, allow, or disable half-precision ops
      "PostStartPauseSecs": 1,        // 1 if using GPU, 0 for CPU

      // Deliberately not using the default queue: We make all Object detectors use the same queue.
      "Queue": "objectdetection_queue",

      "EnvironmentVariables": {
        "MODELS_DIR": "%CURRENT_MODULE_PATH%/assets",
        "CUSTOM_MODELS_DIR": "%CURRENT_MODULE_PATH%/custom-models",
        "MODEL_SIZE": "Small"
      },
      
      "RouteMaps": [
        {
          "Name": "Object Detector",
          "Path": "vision/detection",
          "Method": "POST",
          "Command": "detect",
          "Description": "Detects multiple objects in an image.",
          "Inputs": [
            {
              "Name": "image",
              "Type": "File",
              "Description": "The HTTP file object (image) to be analyzed."
            },
            {
              "Name": "min_confidence",
              "Type": "Float",
              "Description": "The minimum confidence level for an object will be detected. In the range 0.0 to 1.0. Default 0.3.",
              "DefaultValue": 0.30,
              "MinValue": 0.0,
              "MaxValue": 1.0
            }
          ],
          "Outputs": [
            {
              "Name": "success",
              "Type": "Boolean",
              "Description": "True if successful."
            },
            {
              "Name": "predictions",
              "Type": "Object",
              "Description": "An array of objects with the x_max, x_min, max, y_min, label and confidence."
            },
            {
              "Name": "inferenceMs",
              "Type": "Integer",
              "Description": "The time (ms) to perform the AI inference."
            },
            {
              "Name": "processMs",
              "Type": "Integer",
              "Description": "The time (ms) to process the image (includes inference and image manipulation operations)."
            },
            {
              "Name": "analysisRoundTripMs",
              "Type": "Integer",
              "Description": "The time (ms) for the round trip to the analysis module and back."
            }
          ]
        },

        {
          "Name": "Custom Object Detector RKNN",
          "Path": "vision/custom",
          "Method": "POST",
          "Command": "custom",
          "Description": "Detects objects based on YOLO PyTorch models. Models are stored as .rknn files in the /ObjectDetectionYoloRKNN/custom-models directory, and to make a call to a specific model use /vision/custom/model-name, where 'model-name' is the name of the model's .rknn file",
          "Inputs": [
            {
              "Name": "image",
              "Type": "File",
              "Description": "The HTTP file object (image) to be analyzed."
            },
            {
              "Name": "min_confidence",
              "Type": "Float",
              "Description": "The minimum confidence level for an object will be detected. In the range 0.0 to 1.0. Default 0.4."
            }
          ],
          "Outputs": [
            {
              "Name": "success",
              "Type": "Boolean",
              "Description": "True if successful."
            },
            {
              "Name": "predictions",
              "Type": "Object[]",
              "Description": "An array of objects with the x_max, x_min, max, y_min, label and confidence."
            },
            {
              "Name": "inferenceMs",
              "Type": "Integer",
              "Description": "The time (ms) to perform the AI inference."
            },
            {
              "Name": "processMs",
              "Type": "Integer",
              "Description": "The time (ms) to process the image (includes inference and image manipulation operations)."
            },
            {
              "Name": "analysisRoundTripMs",
              "Type": "Integer",
              "Description": "The time (ms) for the round trip to the analysis module and back."
            }
          ]
        },

        {
          "Name": "Object Detector List Custom Models (RKNN)",
          "Path": "vision/custom/list",
          "Method": "POST",
          "Command": "list-custom",
          "Description": "Returns a list of models available.",
          "Inputs": [],
          "Outputs": [
            {
              "Name": "success",
              "Type": "Boolean",
              "Description": "True if successful."
            },
            {
              "Name": "models",
              "Type": "String",
              "Description": "An array of strings containing the names of the models installed."
            }
          ]
        }        
      ]      
    }    
  }
}



    

