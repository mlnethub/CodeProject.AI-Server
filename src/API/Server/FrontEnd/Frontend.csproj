<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<IsWindows Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">true</IsWindows>
		<IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
		<IsOsx Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOsx>
	</PropertyGroup>

	<PropertyGroup Condition="'$(IsWindows)'=='true'">
		<DefineConstants>Windows</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="'$(IsLinux)'=='true'">
		<DefineConstants>Linux</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="'$(IsOsx)'=='true'">
		<DefineConstants>macOS</DefineConstants>
	</PropertyGroup>
	
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU' And '$(IsWindows)'=='true'">
		<TargetFramework>net6.0-windows</TargetFramework>
		<RuntimeIdentifier>win-x64</RuntimeIdentifier>
		<SelfContained>True</SelfContained>
		<!--<PublishSingleFile>true</PublishSingleFile>-->
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU' And '$(IsLinux)'=='true'">
		<TargetFramework>net6.0</TargetFramework>
		<RuntimeIdentifier>linux-x64</RuntimeIdentifier>
		<SelfContained>True</SelfContained>
		<!--<PublishSingleFile>true</PublishSingleFile>-->
	</PropertyGroup>
	
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU' And '$(IsOsx)'=='true'">
		<TargetFramework>net6.0</TargetFramework>
		<RuntimeIdentifier>osx-x64</RuntimeIdentifier>
		<SelfContained>True</SelfContained>
		<!--<PublishSingleFile>true</PublishSingleFile>-->
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<TargetFramework>net6.0</TargetFramework>
	</PropertyGroup>

	<PropertyGroup>
		<ImplicitUsings>disable</ImplicitUsings>
		<Nullable>enable</Nullable>
		<AssemblyName>CodeProject.AI.Server</AssemblyName>
		<Version>1.5.6.2</Version>
		<RootNamespace>CodeProject.AI.API.Server.Frontend</RootNamespace>
		<UserSecretsId>14515168-17dd-49db-9023-0749bb408a37</UserSecretsId>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
		<GenerateDocumentationFile>True</GenerateDocumentationFile>
		<DockerfileContext>..\..\..\..</DockerfileContext>
		<DockerfileTag>codeproject/ai-server</DockerfileTag>
		<ApplicationIcon>favicon.ico</ApplicationIcon>
		<ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>
		<DeleteExistingFiles>true</DeleteExistingFiles>
		<Company>CodeProject</Company>
		<Authors>CodeProject</Authors>
		<Product>CodeProject.AI Server</Product>
	</PropertyGroup>

	<PropertyGroup>
		<PackageLicenseExpression>SSPL-1.0</PackageLicenseExpression>
		<Description>A Service hosting the CodeProject.AI WebAPI for face detection and recognition, object detection, and scene classification, and other AI operations.</Description>
		<PlatformTarget>AnyCPU</PlatformTarget>
		<PackageProjectUrl>https://www.codeproject.com/ai</PackageProjectUrl>
		<PackageIcon>codeproject125x125.png</PackageIcon>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<WarningsAsErrors />
		<DebugType>none</DebugType>
		<DebugSymbols>false</DebugSymbols>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<WarningsAsErrors />
		<DebugType>portable</DebugType>
	</PropertyGroup>

	<ItemGroup>
		<Compile Remove="Controllers\TextController.cs" />
		<Compile Remove="Controllers\VisionController.cs" />
	</ItemGroup>

	<ItemGroup>
		<Content Remove="installconfig.json" />
		<Content Remove="wwwroot\assets\codeprojectAI-black.svg" />
		<Content Remove="wwwroot\assets\codeprojectAI-white.svg" />
	</ItemGroup>

	<ItemGroup>
	  <None Include="wwwroot\assets\codeprojectAI-white.svg" />
	  <None Include="wwwroot\assets\codeprojectAI-black.svg" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.Hosting.Systemd" Version="6.0.0" />
		<PackageReference Include="Microsoft.Extensions.Hosting.WindowsServices" Version="6.0.0" />
		<PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.14.0" />
		<PackageReference Include="Swashbuckle.AspNetCore" Version="6.2.3" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Backend\Backend.csproj" />
	</ItemGroup>

	<ItemGroup>
		<Content Update="wwwroot\assets\bootstrap.bundle.min.js">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
		<Content Update="wwwroot\assets\bootstrap.min.css">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
		<Content Update="wwwroot\assets\codeproject60x60.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
		<Content Update="wwwroot\assets\favicon-16x16.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
		<Content Update="wwwroot\assets\favicon-32x32.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
		<Content Update="wwwroot\assets\logo135-bg.gif">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
		<Content Update="wwwroot\assets\logo250x135.gif">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
		<Content Update="wwwroot\assets\styles.css">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
		<Content Update="wwwroot\index.html">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
		<Content Update="wwwroot\testdata.zip">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</Content>
		<Content Update="wwwroot\vision.html">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
	</ItemGroup>

	<ItemGroup>
	  <None Update="codeproject125x125.png">
	    <Pack>True</Pack>
	    <PackagePath>\</PackagePath>
	  </None>
	</ItemGroup>

	<Target Name="PreBuild" BeforeTargets="PreBuildEvent" Condition="'$(IsWindows)'=='true'">
		<Exec Command="call ..\..\..\starttimer.bat $(ProjectName)" />
	</Target>

	<Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition="'$(IsWindows)'=='true'">
		<Exec Command="call ..\..\..\endtimer.bat $(ProjectName)" />
	</Target>

</Project>