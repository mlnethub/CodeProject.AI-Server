<Project Sdk="Microsoft.NET.Sdk.Worker">

	<PropertyGroup>
		<IsWindows Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">true</IsWindows>
		<IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
		<IsOsx Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOsx>
	</PropertyGroup>

	<PropertyGroup Condition="'$(IsWindows)'=='true'">
		<DefineConstants>Windows</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="'$(IsLinux)'=='true'">
		<DefineConstants>Linux</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="'$(IsOsx)'=='true'">
		<DefineConstants>macOS</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU' And '$(IsWindows)'=='true'">
		<TargetFramework>net6.0-windows</TargetFramework>
		<RuntimeIdentifier>win-x64</RuntimeIdentifier>
		<SelfContained>True</SelfContained>
		<!--<PublishSingleFile>true</PublishSingleFile>-->
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU' And '$(IsLinux)'=='true'">
		<TargetFramework>net6.0</TargetFramework>
		<RuntimeIdentifier>linux-x64</RuntimeIdentifier>
		<SelfContained>True</SelfContained>
		<!--<PublishSingleFile>true</PublishSingleFile>-->
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU' And '$(IsOsx)'=='true'">
		<TargetFramework>net6.0</TargetFramework>
		<RuntimeIdentifier>osx-x64</RuntimeIdentifier>
		<SelfContained>True</SelfContained>
		<!--<PublishSingleFile>true</PublishSingleFile>-->
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<TargetFramework>net6.0</TargetFramework>
	</PropertyGroup>

	<PropertyGroup>
		<Nullable>enable</Nullable>
		<UserSecretsId>dotnet-PortraitFilter-C4FF0E02-9BBA-46BE-B89E-9C2DA88576BD</UserSecretsId>
		<ImplicitUsings>enable</ImplicitUsings>
		<RootNamespace>CodeProject.AI.AnalysisLayer.PortraitFilter</RootNamespace>
		<AssemblyName>PortraitFilter</AssemblyName>
		<Version>1.5.6.2</Version>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
		<DockerfileContext>..\..\..</DockerfileContext>
		<ApplicationIcon>favicon.ico</ApplicationIcon>
		<GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<Authors>CodeProject</Authors>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
		<DebugType>none</DebugType>
		<DebugSymbols>false</DebugSymbols>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<WarningsAsErrors />
		<NoWarn>1701;1702;</NoWarn>
		<DebugType>portable</DebugType>
	</PropertyGroup>

	<ItemGroup>
	  <Content Include="favicon.ico" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.Hosting" Version="6.0.1" />
		<PackageReference Include="UMapx" Version="5.2.2.5" />
		<PackageReference Include="Microsoft.ML.OnnxRuntime" Version="1.11.0" Condition="$([MSBuild]::IsOsPlatform('Linux'))" />
		<PackageReference Include="Microsoft.ML.OnnxRuntime" Version="1.11.0" Condition="$([MSBuild]::IsOsPlatform('OSX'))" />
		<PackageReference Include="Microsoft.ML.OnnxRuntime.GPU" Version="1.11.0" Condition="$([MSBuild]::IsOsPlatform('Windows'))" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\SDK\NET\CodeProject.AI.AnalysisLayer.SDK\CodeProject.AI.AnalysisLayer.SDK.csproj" />
	</ItemGroup>
<!--
	<ItemGroup>
		<Content Include="appsettings.json" />
		<Content Include="appsettings.Development.json">
			<DependentUpon>appsettings.json</DependentUpon>
		</Content>
		<Content Include="modulesettings.json" />
		<Content Include="modulesettings.development.json">
			<DependentUpon>modulesettings.json</DependentUpon>
		</Content>
	</ItemGroup>
-->
	<ItemGroup>
		<Content Update="runtimeconfig.template.json">
			<Generator>SettingsSingleFileGenerator</Generator>
			<LastGenOutput>runtimeconfig.template.Designer.cs</LastGenOutput>
		</Content>
	</ItemGroup>

	<ItemGroup>
		<None Update="Lib\deeplabv3_mnv2_pascal_train_aug.onnx">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
	</ItemGroup>
</Project>
